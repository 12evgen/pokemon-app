version: 2
jobs:
  build_frontend:
    docker:
      - image: circleci/node:11.10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: lint:css
          command: npm run lint:css
      - run:
          name: lint:js
          command: npm run lint:js
      - run:
          name: Build frontend
          command: npm run build
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  build_docker:
    docker:
      - image: docker:18.09.5
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Pokemon Docker Image
          command: docker build -t 12evgen/pokemon:latest .
      - deploy:
          name: Push Pokemon to DockerHub
          command: |
            docker login -u$DOCKERHUB_LOGIN -p$DOCKERHUB_PASSWORD
            docker tag 12evgen/pokemon:latest 12evgen/pokemon:${CIRCLE_SHA1}
            docker push 12evgen/pokemon:latest
            docker push 12evgen/pokemon:${CIRCLE_SHA1}

  deploy:
    docker:
      - image: 12evgen/pokemon:latest
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundles-{{ .Revision }}
      - add_ssh_keys:
          fngerprints:
            - "c7:1f:fb:eb:c0:79:6b:c9:f7:71:62:d6:f5:c0:d5:e7"
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  release:
    jobs:
      - build_frontend:
          filters:
            branches:
              only: master
      - build_docker:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_frontend
          filters:
            branches:
              only: master

  development:
    jobs:
      - build_frontend:
          filters:
            branches:
              ignore: master
      - build_docker:
          requires:
            - build_frontend
          filters:
            branches:
              ignore: master
